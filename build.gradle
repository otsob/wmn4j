plugins {
    id 'java'
    id 'checkstyle'
    id 'maven-publish'
    id 'signing'
    id 'net.researchgate.release' version '2.8.1'
}

group = 'org.wmn4j'
description = 'A Java library for handling western music notation.'
sourceCompatibility = '17'

java {
    withJavadocJar()
    withSourcesJar()
}

checkstyle {
    getConfigDirectory().set(file("build-resources/checkstyle/"))
    checkstyleTest.enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    implementation 'org.slf4j:slf4j-jdk14:1.7.32'
    implementation 'org.apache.commons:commons-math3:3.6.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
}

javadoc {
    options.encoding = 'UTF-8'
    options.header().setNoTimestamp(true)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java

            pom {
                name = project.name
                description = project.description
                url = 'http://www.wmn4j.org'
                licenses {
                    license {
                        name = 'MIT license'
                    }
                }
                developers {
                    developer {
                        name = 'Otso BjÃ¶rklund'
                    }
                    developer {
                        name = 'Matias Wargelin'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/otsob/wmn4j.git'
                    developerConnection = 'scm:git:ssh://git@github.com:otsob/wmn4j.git'
                    url = 'https://github.com/otsob/wmn4j'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "$buildDir/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

afterReleaseBuild.dependsOn publish

release {
    pushReleaseVersionBranch = 'master'
    git.requireBranch = 'development'
    tagTemplate = '$name-$version'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task createProjectPropertiesFile(dependsOn: processResources) {
    doLast {
        String versionNumber = project.version.toString()
        println 'Creating properties file for ' + project.name + " version " + versionNumber
        new File("$buildDir/resources/main/wmn4j.properties").withWriter { writer ->
            Properties properties = new Properties()
            properties['version'] = versionNumber
            properties.store writer, null
        }
    }
}

classes {
    dependsOn createProjectPropertiesFile
}
