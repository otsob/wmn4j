<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
  <module name="SuppressionFilter">
    <property name="file" value="${config_loc}/checkstyle-suppressions.xml"/>
  </module>

	<property name="fileExtensions" value="java, properties, xml" />

	<!-- Checks that a package-info.java file exists for each package. -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
	<module name="JavadocPackage" />

	<!-- Checks whether files end with a new line. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
	<module name="NewlineAtEndOfFile" />

	<!-- Miscellaneous other checks. -->
	<!-- See http://checkstyle.sf.net/config_misc.html -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$" />
		<property name="minimum" value="0" />
		<property name="maximum" value="0" />
		<property name="message" value="Line has trailing spaces." />
	</module>

	<module name="LineLength">
		<property name="max" value="120" />
		<property name="tabWidth" value="4" />
	</module>

	<!-- Checks for Headers -->
	<!-- See http://checkstyle.sf.net/config_header.html -->
	<!-- <module name="Header"> -->
	<!-- <property name="headerFile" value="${checkstyle.header.file}"/> -->
	<!-- <property name="fileExtensions" value="java"/> -->
	<!-- </module> -->

	<module name="TreeWalker">

		<!-- Checks for Javadoc comments. -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocVariable">
			<property name="scope" value="public" />
		</module>
		<module name="JavadocMethod">
			<property name="accessModifiers" value="public" />
		</module>
		<module name="JavadocStyle" />

		<!-- Checks for Naming Conventions. -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName" />

		<!-- Checks for imports -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport" />
		<module name="IllegalImport" /> <!-- defaults to sun.* packages -->
		<module name="RedundantImport" />
		<module name="UnusedImports">
			<property name="processJavadoc" value="false" />
		</module>

		<!-- Checks for whitespace -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad" />
		<module name="GenericWhitespace" />
		<module name="MethodParamPad" />
		<module name="NoWhitespaceBefore" />
		<module name="OperatorWrap" />
		<module name="ParenPad" />
		<module name="TypecastParenPad" />
		<module name="WhitespaceAfter" />
		<module name="WhitespaceAround" />

		<!-- Modifier Checks -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder" />
		<module name="RedundantModifier" />

		<!-- Checks for blocks. You know, those {}'s -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="EmptyBlock" />
		<module name="LeftCurly" />
		<module name="NeedBraces" />
		<module name="RightCurly" />

		<!-- Checks for class design -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<module name="InterfaceIsType" />
		<module name="VisibilityModifier" />
		<module name="FinalClass" />
		<module name="HideUtilityClassConstructor" />

		<module name="EqualsAvoidNull" />
		<module name="EqualsHashCode" />

		<module name="IllegalInstantiation">
			<property name="classes" value="java.lang.Boolean" />
			<property name="classes" value="java.lang.Double" />
			<property name="classes" value="java.lang.Integer" />
		</module>

		<module name="MultipleStringLiterals">
			<property name="ignoreStringsRegexp" value='^(("")|(", ")|(" ")|("\\n"))$' />
		</module>

		<module name="OneStatementPerLine" />
		<module name="ParameterAssignment" />
		<module name="StringLiteralEquality" />
	</module>
</module>
